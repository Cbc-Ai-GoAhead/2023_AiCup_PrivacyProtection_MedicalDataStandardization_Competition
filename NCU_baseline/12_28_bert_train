2023-12-28 14:48:28.863932: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-12-28 14:48:29.917697: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
Some weights of BertForTokenClassification were not initialized from the model checkpoint at bert-base-cased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
#### Load pre trained!!
first_dataset_path =../data/First_Phase_Release_Correction/First_Phase_Text_Dataset/, second_dataset_path=../data/Second_Phase_Dataset/Second_Phase_Text_Dataset/
label_path =['../data/First_Phase_Release_Correction/answer.txt', '../data/Second_Phase_Dataset/answer.txt']
#### 1 Load First and Second Dataset
#### 1 Load train and val path
num of first_dataset =1120, second_dataset_path=614

num of train_path =1734, val_path=560
---------------------
#### load train data from path
len train_medical_record_dict = 1734
len val_medical_record_dict = 560
train_medical_record_dict.keys() len = 1734
num of train medical_data=4845, label = 4845, val  medical_data=560, label = 560
['DATE', 'STATE', 'SET', 'PATIENT', 'ORGANIZATION', 'DEPARTMENT', 'HOSPITAL', 'IDNUM', 'STREET', 'TIME', 'DURATION', 'PHONE', 'ZIP', 'COUNTRY', 'ROOM', 'DOCTOR', 'URL', 'MEDICALRECORD', 'LOCATION-OTHER', 'AGE', 'CITY']
type = ['DATE', 'STATE', 'SET', 'PATIENT', 'ORGANIZATION', 'DEPARTMENT', 'HOSPITAL', 'IDNUM', 'STREET', 'TIME', 'DURATION', 'PHONE', 'ZIP', 'COUNTRY', 'ROOM', 'DOCTOR', 'URL', 'MEDICALRECORD', 'LOCATION-OTHER', 'AGE', 'CITY']
befort sort = ['DATE', 'STATE', 'SET', 'PATIENT', 'ORGANIZATION', 'DEPARTMENT', 'HOSPITAL', 'IDNUM', 'STREET', 'TIME', 'DURATION', 'PHONE', 'ZIP', 'COUNTRY', 'ROOM', 'DOCTOR', 'URL', 'MEDICALRECORD', 'LOCATION-OTHER', 'AGE', 'CITY']
after sort = ['OTHER', 'AGE', 'CITY', 'COUNTRY', 'DATE', 'DEPARTMENT', 'DOCTOR', 'DURATION', 'HOSPITAL', 'IDNUM', 'LOCATION-OTHER', 'MEDICALRECORD', 'ORGANIZATION', 'PATIENT', 'PHONE', 'ROOM', 'SET', 'STATE', 'STREET', 'TIME', 'URL', 'ZIP']
labels_type = ['OTHER', 'AGE', 'CITY', 'COUNTRY', 'DATE', 'DEPARTMENT', 'DOCTOR', 'DURATION', 'HOSPITAL', 'IDNUM', 'LOCATION-OTHER', 'MEDICALRECORD', 'ORGANIZATION', 'PATIENT', 'PHONE', 'ROOM', 'SET', 'STATE', 'STREET', 'TIME', 'URL', 'ZIP']
The number of labels labels_num = 22
Testing  Context and label
labels_type_table = {'OTHER': 0, 'AGE': 1, 'CITY': 2, 'COUNTRY': 3, 'DATE': 4, 'DEPARTMENT': 5, 'DOCTOR': 6, 'DURATION': 7, 'HOSPITAL': 8, 'IDNUM': 9, 'LOCATION-OTHER': 10, 'MEDICALRECORD': 11, 'ORGANIZATION': 12, 'PATIENT': 13, 'PHONE': 14, 'ROOM': 15, 'SET': 16, 'STATE': 17, 'STREET': 18, 'TIME': 19, 'URL': 20, 'ZIP': 21}
Prepare Dataset DataLoader
----Prepare Dataset DataLoader
Display Model------
---- Dataloader
----------------print_dataset_loaderstatus
---Training Dataset
4845
train_x = Episode No:  32F514877F
3225148.UTF

RANDOLF, JAME BETTY 
Lab No:  32F51487,32F51487
Hyslip
CULBURRA  South Australia  6284
Specimen: Fluid,Tissue
D.O.B:  5/12/1984
Sex:  F
Collected: 4/2/2063 at :
Location:  Cure For Life Foundation Neuro-oncology Laboratory Adult Cancer-WEST WIMMERA HEALTH SERVICE - RAINBOW
DR FREDERICH BRODY NOSE
Distribution:   FILE-COPY,   NSW-CANCER-REGISTRY, DR CHADWICK
CLINICAL:
Endometrial cancer.  Hx of wafarin use for AF.  Rheumatoid arthritis. 
MACROSCOPIC:
A.  Specimen labell , train_y=[['IDNUM', 13, 23], ['MEDICALRECORD', 24, 35], ['PATIENT', 37, 56], ['IDNUM', 67, 75], ['IDNUM', 76, 84], ['STREET', 85, 91], ['CITY', 92, 100], ['STATE', 102, 117], ['ZIP', 119, 123], ['DATE', 155, 164], ['DATE', 184, 192], ['DEPARTMENT', 209, 272], ['HOSPITAL', 273, 310], ['DOCTOR', 314, 334], ['DOCTOR', 388, 396]]
-----------------train_dataset
x_name = ['\nEpisode No:  33G993252T\n332993.GNH\n\nSUROWKA, MEHRI \nLab No:  33G99325\nN Matthews\nNEWMAN  Northern Territory  \nSpecimen: Swab,Tissue\nD.O.B:  26/4/1996\nSex:  F\nCollected: 10/07/2013 at 16:43\nLocation:  ONCOLOGY (GYNAE)-DALWALLINU HOSPITAL\nDR Nick JODY CUMENS\nDistribution:   FILE-COPY\nSUPPLEMENTARY REPORT (17.9.63):\n\n\nCLINICAL:\nWhipple - hilar nodes.  Aorticnodes.  \nMACROSCOPIC:\nA.  Specimen labelled "Whipple specimen, long on bile duct" consists of a Whipple specimen including pancreatic neck, body and unc'],
len x_name=510
y_label = [[['IDNUM', 14, 24], ['MEDICALRECORD', 25, 35], ['PATIENT', 37, 51], ['IDNUM', 62, 70], ['STREET', 71, 81], ['CITY', 82, 88], ['STATE', 90, 108], ['DATE', 141, 150], ['TIME', 170, 189], ['DEPARTMENT', 201, 217], ['HOSPITAL', 218, 237], ['DOCTOR', 241, 257], ['DATE', 306, 313]]],
-----------------
----------------
{'OTHER': 0, 'AGE': 1, 'CITY': 2, 'COUNTRY': 3, 'DATE': 4, 'DEPARTMENT': 5, 'DOCTOR': 6, 'DURATION': 7, 'HOSPITAL': 8, 'IDNUM': 9, 'LOCATION-OTHER': 10, 'MEDICALRECORD': 11, 'ORGANIZATION': 12, 'PATIENT': 13, 'PHONE': 14, 'ROOM': 15, 'SET': 16, 'STATE': 17, 'STREET': 18, 'TIME': 19, 'URL': 20, 'ZIP': 21}
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 0.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 0.0, 0.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 0.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 0.0, 0.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 19.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0]
type = tensor([[  101,  8112,  1302,   131,  3081,  2349,  1580,  1580, 17101,  1571,
          1477,  1942,  3081, 26752,  1580,  1495,   119,   144,  2249,  3048,
           156, 19556, 17056, 18135,   117, 22157,  3048, 20595, 14470,  1302,
           131,  3081,  2349,  1580,  1580, 17101,  1571,   151, 12495, 26546,
          2924,  8271,  2249,  2579,  7442,   156, 25392, 10453,  1179,   131,
           156, 26580,   117,   157, 14788,  4175,   141,   119,   152,   119,
           139,   131,  1744,   120,   125,   120,  1820,  9850,   131,   143,
          9518, 19037,   131,  1275,   120,  5004,   120,  1381,  1120,  1479,
           131,  3887, 26316,   131, 21748, 15678,  2162,  2346,  2349,  3663,
           113,   144,  3663, 11185,  2036,   114,   118,   141, 12507, 11840,
         23955, 11607,  2591,   145,  9025, 23203,  9159,  2162, 22219,  3350,
           147, 15609,  3663,   140, 25810, 11680,  1708, 19806,   131,   143,
         17656,  2036,   118, 18732,  2101,  3663,   156, 18124, 27258, 15577,
         11680,  9159,  2069,  3663,   155, 16668,  9565,  1942,   113,  1542,
           119,   130,   119,  5519,   114,   131,   140,  2162, 11607,  9741,
         12507,   131,   160,  3157,  7136,   118, 20844,  5815, 15029,   119,
           138, 12148,  1596,  2728,  4704,   119, 25424, 21564, 10844, 17195,
          9741,   131,   138,   119,   156, 25392, 10453,  1179, 19818,   107,
           160,  3157,  7136, 11678,   117,  1263,  1113, 16516,  1513, 26862,
           107,  2923,  1104,   170,   160,  3157,  7136, 11678,  1259, 13316,
         13782,  7698,  2455,   117,  1404,  1105,  8362,  1665,   102]])
type = [[101, 8112, 1302, 131, 3081, 2349, 1580, 1580, 17101, 1571, 1477, 1942, 3081, 26752, 1580, 1495, 119, 144, 2249, 3048, 156, 19556, 17056, 18135, 117, 22157, 3048, 20595, 14470, 1302, 131, 3081, 2349, 1580, 1580, 17101, 1571, 151, 12495, 26546, 2924, 8271, 2249, 2579, 7442, 156, 25392, 10453, 1179, 131, 156, 26580, 117, 157, 14788, 4175, 141, 119, 152, 119, 139, 131, 1744, 120, 125, 120, 1820, 9850, 131, 143, 9518, 19037, 131, 1275, 120, 5004, 120, 1381, 1120, 1479, 131, 3887, 26316, 131, 21748, 15678, 2162, 2346, 2349, 3663, 113, 144, 3663, 11185, 2036, 114, 118, 141, 12507, 11840, 23955, 11607, 2591, 145, 9025, 23203, 9159, 2162, 22219, 3350, 147, 15609, 3663, 140, 25810, 11680, 1708, 19806, 131, 143, 17656, 2036, 118, 18732, 2101, 3663, 156, 18124, 27258, 15577, 11680, 9159, 2069, 3663, 155, 16668, 9565, 1942, 113, 1542, 119, 130, 119, 5519, 114, 131, 140, 2162, 11607, 9741, 12507, 131, 160, 3157, 7136, 118, 20844, 5815, 15029, 119, 138, 12148, 1596, 2728, 4704, 119, 25424, 21564, 10844, 17195, 9741, 131, 138, 119, 156, 25392, 10453, 1179, 19818, 107, 160, 3157, 7136, 11678, 117, 1263, 1113, 16516, 1513, 26862, 107, 2923, 1104, 170, 160, 3157, 7136, 11678, 1259, 13316, 13782, 7698, 2455, 117, 1404, 1105, 8362, 1665, 102]]
---------------------
Encoding(num_tokens=209, attributes=[ids, type_ids, tokens, offsets, attention_mask, special_tokens_mask, overflowing])
['[CLS]', 'Episode', 'No', ':', '33', '##G', '##9', '##9', '##32', '##5', '##2', '##T', '33', '##29', '##9', '##3', '.', 'G', '##N', '##H', 'S', '##UR', '##OW', '##KA', ',', 'ME', '##H', '##RI', 'Lab', 'No', ':', '33', '##G', '##9', '##9', '##32', '##5', 'N', 'Matthews', 'NE', '##W', '##MA', '##N', 'Northern', 'Territory', 'S', '##pec', '##ime', '##n', ':', 'S', '##wab', ',', 'T', '##iss', '##ue', 'D', '.', 'O', '.', 'B', ':', '26', '/', '4', '/', '1996', 'Sex', ':', 'F', 'Col', '##lected', ':', '10', '/', '07', '/', '2013', 'at', '16', ':', '43', 'Location', ':', 'ON', '##CO', '##L', '##O', '##G', '##Y', '(', 'G', '##Y', '##NA', '##E', ')', '-', 'D', '##AL', '##WA', '##LL', '##IN', '##U', 'H', '##OS', '##PI', '##TA', '##L', 'DR', 'Nick', 'J', '##OD', '##Y', 'C', '##UM', '##EN', '##S', 'Distribution', ':', 'F', '##IL', '##E', '-', 'CO', '##P', '##Y', 'S', '##UP', '##PL', '##EM', '##EN', '##TA', '##R', '##Y', 'R', '##EP', '##OR', '##T', '(', '17', '.', '9', '.', '63', ')', ':', 'C', '##L', '##IN', '##IC', '##AL', ':', 'W', '##hip', '##ple', '-', 'hi', '##lar', 'nodes', '.', 'A', '##ort', '##ic', '##no', '##des', '.', 'MAC', '##RO', '##SC', '##OP', '##IC', ':', 'A', '.', 'S', '##pec', '##ime', '##n', 'labelled', '"', 'W', '##hip', '##ple', 'specimen', ',', 'long', 'on', 'bi', '##le', 'duct', '"', 'consists', 'of', 'a', 'W', '##hip', '##ple', 'specimen', 'including', 'pan', '##cre', '##atic', 'neck', ',', 'body', 'and', 'un', '##c', '[SEP]']
len tmp_ids_to_tokens=209
len total text=835
len train_x =4
len train_y[i] =209
----------------print_annotated_medical_report
### Train
myModel(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(28996, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (droupout): Dropout(p=0.1, inplace=False)
  (fc): Linear(in_features=768, out_features=22, bias=True)
)
start = inf, end=-1
label = ['DATE', 510, 516]
label[1]=510, label[2]=516, sample_offsets=tensor([[  0,   0],
        [  0,   1],
        [  1,   4],
        [  5,   7],
        [  8,  13],
        [ 14,  16],
        [ 17,  20],
        [ 21,  25],
        [ 26,  29],
        [ 30,  36],
        [ 37,  44],
        [ 45,  47],
        [ 48,  51],
        [ 52,  57],
        [ 57,  58],
        [ 61,  66],
        [ 67,  68],
        [ 68,  69],
        [ 70,  72],
        [ 72,  75],
        [ 76,  81],
        [ 82,  88],
        [ 88,  89],
        [ 90,  91],
        [ 92,  93],
        [ 94,  95],
        [ 96,  97],
        [ 98,  99],
        [100, 102],
        [102, 105],
        [105, 107],
        [107, 112],
        [113, 117],
        [118, 124],
        [124, 125],
        [126, 127],
        [128, 129],
        [130, 132],
        [132, 135],
        [135, 138],
        [139, 146],
        [147, 154],
        [155, 158],
        [158, 159],
        [160, 161],
        [162, 163],
        [164, 165],
        [166, 167],
        [168, 175],
        [176, 181],
        [182, 185],
        [185, 189],
        [190, 196],
        [196, 197],
        [198, 199],
        [199, 200],
        [200, 201],
        [202, 203],
        [204, 205],
        [205, 206],
        [207, 214],
        [215, 221],
        [222, 224],
        [225, 230],
        [231, 234],
        [234, 237],
        [237, 238],
        [239, 240],
        [240, 241],
        [241, 243],
        [244, 245],
        [246, 249],
        [250, 254],
        [255, 259],
        [260, 262],
        [263, 265],
        [265, 266],
        [267, 270],
        [271, 276],
        [277, 278],
        [278, 279],
        [280, 281],
        [282, 284],
        [284, 285],
        [286, 292],
        [293, 299],
        [299, 300],
        [301, 303],
        [304, 305],
        [305, 307],
        [308, 309],
        [310, 316],
        [317, 323],
        [323, 324],
        [324, 325],
        [326, 328],
        [328, 329],
        [329, 331],
        [332, 333],
        [334, 340],
        [341, 347],
        [348, 350],
        [351, 352],
        [352, 357],
        [357, 358],
        [359, 360],
        [360, 361],
        [362, 366],
        [367, 375],
        [376, 378],
        [379, 387],
        [387, 388],
        [389, 391],
        [392, 393],
        [394, 396],
        [397, 398],
        [399, 400],
        [400, 401],
        [401, 403],
        [403, 408],
        [409, 413],
        [414, 415],
        [415, 417],
        [417, 418],
        [419, 425],
        [426, 427],
        [427, 431],
        [432, 433],
        [433, 435],
        [435, 436],
        [437, 439],
        [439, 440],
        [441, 446],
        [446, 448],
        [449, 450],
        [450, 454],
        [455, 456],
        [456, 458],
        [458, 459],
        [460, 462],
        [462, 463],
        [464, 467],
        [468, 469],
        [469, 471],
        [471, 472],
        [472, 473],
        [474, 480],
        [481, 484],
        [485, 492],
        [492, 493],
        [496, 497],
        [497, 499],
        [499, 500],
        [501, 503],
        [503, 504],
        [504, 505],
        [505, 506],
        [506, 507],
        [507, 508],
        [508, 509],
        [  0,   0]])
start = inf, end=-1
label = ['DATE', 510, 517]
label[1]=510, label[2]=517, sample_offsets=tensor([[  0,   0],
        [  0,   6],
        [  6,   7],
        [  8,  10],
        [ 10,  12],
        [ 13,  17],
        [ 18,  21],
        [ 22,  29],
        [ 30,  31],
        [ 31,  33],
        [ 33,  37],
        [ 38,  44],
        [ 44,  45],
        [ 46,  48],
        [ 48,  50],
        [ 51,  55],
        [ 56,  59],
        [ 60,  67],
        [ 68,  76],
        [ 77,  83],
        [ 83,  84],
        [ 86,  89],
        [ 90,  94],
        [ 95,  97],
        [ 98, 101],
        [102, 106],
        [107, 110],
        [110, 112],
        [112, 115],
        [115, 117],
        [118, 125],
        [126, 128],
        [128, 131],
        [131, 134],
        [134, 138],
        [138, 139],
        [140, 145],
        [145, 146],
        [146, 147],
        [149, 150],
        [151, 152],
        [153, 154],
        [155, 156],
        [157, 158],
        [158, 162],
        [163, 165],
        [166, 174],
        [175, 178],
        [179, 181],
        [181, 183],
        [183, 187],
        [187, 188],
        [189, 191],
        [191, 194],
        [195, 201],
        [201, 202],
        [203, 204],
        [205, 206],
        [207, 208],
        [208, 213],
        [214, 220],
        [221, 225],
        [226, 228],
        [228, 230],
        [230, 234],
        [234, 235],
        [236, 237],
        [238, 239],
        [240, 241],
        [241, 246],
        [247, 249],
        [250, 257],
        [258, 259],
        [259, 261],
        [261, 264],
        [265, 271],
        [271, 272],
        [273, 274],
        [275, 277],
        [278, 279],
        [280, 281],
        [282, 283],
        [283, 288],
        [288, 289],
        [290, 291],
        [292, 293],
        [294, 295],
        [295, 300],
        [301, 304],
        [305, 312],
        [313, 315],
        [315, 318],
        [319, 325],
        [325, 326],
        [327, 328],
        [329, 330],
        [331, 337],
        [338, 342],
        [343, 346],
        [346, 348],
        [348, 351],
        [351, 353],
        [353, 354],
        [355, 356],
        [356, 357],
        [359, 360],
        [360, 363],
        [363, 366],
        [366, 367],
        [368, 376],
        [377, 378],
        [378, 382],
        [382, 385],
        [385, 388],
        [388, 390],
        [391, 392],
        [392, 396],
        [397, 401],
        [401, 402],
        [403, 411],
        [412, 414],
        [415, 418],
        [419, 425],
        [426, 428],
        [429, 431],
        [431, 434],
        [434, 436],
        [436, 439],
        [440, 446],
        [447, 456],
        [457, 458],
        [459, 462],
        [463, 464],
        [464, 466],
        [467, 469],
        [470, 477],
        [478, 487],
        [487, 488],
        [490, 491],
        [491, 492],
        [493, 494],
        [495, 500],
        [500, 501],
        [503, 504],
        [504, 506],
        [506, 507],
        [507, 508],
        [508, 509],
        [  0,   0]])
start = inf, end=-1
label = ['DATE', 510, 517]
label[1]=510, label[2]=517, sample_offsets=tensor([[  0,   0],
        [  0,   2],
        [  2,   5],
        [  5,   6],
        [  7,  15],
        [ 16,  18],
        [ 19,  22],
        [ 23,  24],
        [ 24,  26],
        [ 26,  29],
        [ 30,  33],
        [ 34,  37],
        [ 38,  47],
        [ 48,  49],
        [ 50,  59],
        [ 60,  61],
        [ 61,  63],
        [ 63,  66],
        [ 66,  67],
        [ 68,  72],
        [ 72,  73],
        [ 75,  78],
        [ 79,  88],
        [ 89,  91],
        [ 92,  95],
        [ 96,  97],
        [ 97,  99],
        [ 99, 102],
        [103, 110],
        [111, 119],
        [120, 125],
        [125, 128],
        [128, 131],
        [132, 142],
        [143, 151],
        [152, 153],
        [153, 155],
        [155, 158],
        [159, 167],
        [167, 168],
        [170, 172],
        [173, 178],
        [179, 189],
        [190, 195],
        [196, 206],
        [206, 207],
        [209, 217],
        [218, 219],
        [219, 223],
        [224, 229],
        [230, 233],
        [234, 244],
        [245, 247],
        [248, 251],
        [252, 254],
        [254, 258],
        [258, 262],
        [263, 266],
        [267, 271],
        [272, 273],
        [274, 276],
        [277, 279],
        [279, 281],
        [281, 282],
        [285, 290],
        [290, 291],
        [291, 292],
        [294, 295],
        [296, 297],
        [297, 299],
        [299, 303],
        [304, 306],
        [306, 313],
        [314, 320],
        [320, 321],
        [322, 323],
        [323, 324],
        [325, 328],
        [328, 333],
        [334, 336],
        [336, 343],
        [344, 350],
        [350, 351],
        [352, 353],
        [354, 356],
        [357, 358],
        [359, 360],
        [361, 362],
        [362, 367],
        [368, 371],
        [372, 380],
        [380, 381],
        [382, 383],
        [384, 385],
        [386, 391],
        [392, 393],
        [393, 396],
        [396, 398],
        [398, 400],
        [401, 405],
        [405, 406],
        [407, 408],
        [409, 410],
        [411, 425],
        [426, 429],
        [429, 432],
        [432, 434],
        [434, 435],
        [436, 437],
        [438, 439],
        [440, 445],
        [445, 448],
        [448, 452],
        [452, 453],
        [454, 456],
        [457, 458],
        [459, 460],
        [460, 465],
        [466, 467],
        [467, 471],
        [472, 476],
        [476, 477],
        [478, 480],
        [481, 483],
        [484, 486],
        [487, 488],
        [489, 490],
        [490, 494],
        [495, 500],
        [500, 501],
        [503, 504],
        [504, 505],
        [505, 506],
        [506, 507],
        [507, 509],
        [  0,   0]])
start = inf, end=-1
label = ['DATE', 510, 517]
label[1]=510, label[2]=517, sample_offsets=tensor([[  0,   0],
        [  0,   2],
        [  2,   5],
        [  6,   8],
        [  9,  10],
        [ 11,  16],
        [ 17,  19],
        [ 20,  21],
        [ 21,  25],
        [ 25,  27],
        [ 28,  33],
        [ 34,  42],
        [ 43,  46],
        [ 47,  48],
        [ 49,  51],
        [ 52,  53],
        [ 54,  56],
        [ 56,  58],
        [ 58,  59],
        [ 61,  63],
        [ 64,  65],
        [ 65,  70],
        [ 71,  79],
        [ 80,  83],
        [ 84,  94],
        [ 94,  95],
        [ 97, 111],
        [112, 120],
        [121, 123],
        [124, 125],
        [126, 132],
        [132, 133],
        [136, 137],
        [137, 138],
        [140, 141],
        [141, 144],
        [144, 147],
        [147, 148],
        [149, 157],
        [158, 159],
        [159, 162],
        [162, 166],
        [166, 169],
        [170, 172],
        [172, 175],
        [175, 176],
        [177, 185],
        [186, 188],
        [189, 193],
        [194, 199],
        [200, 206],
        [207, 212],
        [213, 221],
        [222, 224],
        [225, 226],
        [227, 229],
        [230, 231],
        [232, 233],
        [233, 235],
        [235, 236],
        [238, 239],
        [239, 240],
        [241, 242],
        [243, 248],
        [248, 249],
        [250, 251],
        [251, 252],
        [254, 255],
        [255, 258],
        [258, 261],
        [261, 262],
        [263, 271],
        [272, 273],
        [273, 275],
        [275, 278],
        [279, 281],
        [282, 289],
        [289, 290],
        [291, 299],
        [300, 302],
        [303, 307],
        [308, 313],
        [314, 320],
        [321, 326],
        [327, 334],
        [335, 337],
        [338, 339],
        [340, 342],
        [343, 344],
        [345, 346],
        [346, 348],
        [348, 349],
        [351, 352],
        [352, 353],
        [354, 355],
        [356, 361],
        [361, 362],
        [363, 364],
        [364, 365],
        [367, 368],
        [368, 371],
        [371, 374],
        [374, 375],
        [376, 384],
        [385, 386],
        [386, 387],
        [387, 390],
        [390, 393],
        [394, 397],
        [397, 400],
        [400, 402],
        [402, 404],
        [404, 405],
        [406, 414],
        [415, 417],
        [418, 420],
        [420, 423],
        [423, 425],
        [425, 428],
        [429, 435],
        [436, 441],
        [442, 450],
        [451, 453],
        [454, 455],
        [456, 458],
        [459, 460],
        [461, 463],
        [463, 465],
        [466, 468],
        [469, 478],
        [478, 479],
        [481, 482],
        [482, 483],
        [484, 485],
        [486, 492],
        [492, 493],
        [495, 496],
        [496, 498],
        [498, 499],
        [500, 501],
        [501, 502],
        [502, 503],
        [504, 506],
        [506, 507],
        [507, 509],
        [  0,   0]])
start = inf, end=-1
label = ['DATE', 510, 517]
label[1]=510, label[2]=517, sample_offsets=tensor([[  0,   0],
        [  0,   1],
        [  2,   6],
        [  7,   8],
        [  8,  11],
        [ 11,  13],
        [ 14,  21],
        [ 22,  26],
        [ 27,  28],
        [ 29,  31],
        [ 32,  33],
        [ 34,  36],
        [ 36,  37],
        [ 39,  43],
        [ 44,  52],
        [ 53,  56],
        [ 56,  59],
        [ 60,  65],
        [ 66,  69],
        [ 70,  80],
        [ 80,  81],
        [ 83,  84],
        [ 85,  87],
        [ 88,  91],
        [ 92,  94],
        [ 94,  96],
        [ 96,  99],
        [100, 102],
        [102, 104],
        [104, 107],
        [107, 108],
        [109, 110],
        [111, 113],
        [114, 124],
        [125, 127],
        [127, 130],
        [131, 134],
        [135, 136],
        [137, 139],
        [139, 142],
        [143, 144],
        [144, 147],
        [147, 150],
        [151, 153],
        [153, 155],
        [155, 158],
        [158, 159],
        [160, 165],
        [165, 166],
        [166, 167],
        [169, 170],
        [171, 172],
        [173, 176],
        [176, 181],
        [182, 188],
        [188, 189],
        [190, 191],
        [192, 193],
        [194, 196],
        [196, 200],
        [201, 207],
        [207, 208],
        [209, 210],
        [211, 213],
        [214, 215],
        [216, 217],
        [218, 226],
        [227, 230],
        [230, 233],
        [234, 238],
        [239, 241],
        [242, 244],
        [244, 246],
        [246, 249],
        [250, 252],
        [252, 254],
        [254, 257],
        [257, 258],
        [259, 260],
        [261, 262],
        [263, 264],
        [265, 266],
        [267, 275],
        [276, 279],
        [279, 282],
        [283, 287],
        [288, 298],
        [299, 301],
        [301, 304],
        [304, 305],
        [306, 307],
        [308, 309],
        [310, 316],
        [317, 325],
        [326, 329],
        [329, 332],
        [333, 337],
        [338, 348],
        [349, 351],
        [351, 354],
        [354, 355],
        [356, 357],
        [358, 359],
        [359, 361],
        [362, 370],
        [370, 373],
        [373, 376],
        [377, 381],
        [382, 383],
        [383, 386],
        [386, 389],
        [390, 392],
        [392, 394],
        [394, 397],
        [397, 398],
        [399, 401],
        [402, 404],
        [405, 407],
        [408, 409],
        [410, 415],
        [416, 417],
        [417, 420],
        [420, 422],
        [423, 427],
        [427, 428],
        [429, 431],
        [432, 433],
        [434, 437],
        [438, 439],
        [439, 442],
        [442, 444],
        [444, 445],
        [446, 448],
        [449, 450],
        [451, 456],
        [457, 458],
        [458, 461],
        [461, 463],
        [463, 464],
        [465, 467],
        [468, 470],
        [471, 473],
        [474, 475],
        [476, 481],
        [482, 483],
        [483, 487],
        [488, 493],
        [494, 498],
        [498, 499],
        [503, 504],
        [504, 506],
        [506, 507],
        [507, 508],
        [508, 509],
        [  0,   0]])
start = inf, end=-1
label = ['DOCTOR', 510, 520]
label[1]=510, label[2]=520, sample_offsets=tensor([[  0,   0],
        [  0,   2],
        [  2,   6],
        [  6,   7],
        [  9,  10],
        [ 10,  13],
        [ 13,  16],
        [ 16,  17],
        [ 18,  19],
        [ 19,  20],
        [ 21,  22],
        [ 23,  29],
        [ 29,  30],
        [ 31,  36],
        [ 36,  37],
        [ 37,  38],
        [ 39,  40],
        [ 41,  42],
        [ 43,  46],
        [ 47,  48],
        [ 48,  52],
        [ 53,  57],
        [ 58,  60],
        [ 60,  64],
        [ 64,  66],
        [ 66,  67],
        [ 68,  69],
        [ 70,  73],
        [ 74,  75],
        [ 76,  77],
        [ 78,  81],
        [ 82,  83],
        [ 83,  87],
        [ 88,  92],
        [ 93,  94],
        [ 94,  98],
        [ 98, 102],
        [102, 103],
        [104, 105],
        [105, 106],
        [108, 109],
        [109, 112],
        [112, 115],
        [115, 116],
        [117, 125],
        [126, 127],
        [127, 129],
        [129, 130],
        [130, 132],
        [132, 134],
        [135, 137],
        [137, 141],
        [141, 144],
        [145, 146],
        [146, 147],
        [148, 156],
        [157, 159],
        [160, 163],
        [164, 170],
        [171, 175],
        [175, 176],
        [176, 179],
        [180, 182],
        [182, 184],
        [184, 186],
        [186, 187],
        [187, 189],
        [189, 192],
        [193, 199],
        [200, 209],
        [210, 212],
        [213, 216],
        [217, 219],
        [219, 221],
        [222, 224],
        [225, 232],
        [233, 242],
        [242, 243],
        [245, 246],
        [246, 249],
        [249, 252],
        [252, 253],
        [254, 255],
        [255, 256],
        [257, 258],
        [258, 263],
        [263, 264],
        [266, 267],
        [267, 268],
        [270, 271],
        [271, 274],
        [274, 277],
        [277, 278],
        [279, 287],
        [288, 289],
        [289, 294],
        [295, 303],
        [304, 306],
        [306, 309],
        [310, 311],
        [311, 315],
        [316, 320],
        [320, 321],
        [321, 322],
        [323, 331],
        [332, 334],
        [335, 336],
        [337, 338],
        [338, 342],
        [343, 347],
        [348, 355],
        [356, 358],
        [359, 361],
        [361, 363],
        [363, 366],
        [367, 373],
        [374, 383],
        [384, 386],
        [386, 388],
        [389, 391],
        [392, 399],
        [400, 409],
        [409, 410],
        [412, 413],
        [413, 416],
        [416, 419],
        [419, 420],
        [421, 427],
        [427, 429],
        [430, 437],
        [437, 439],
        [440, 443],
        [444, 445],
        [445, 446],
        [447, 448],
        [449, 454],
        [454, 455],
        [457, 458],
        [458, 460],
        [460, 461],
        [462, 463],
        [463, 464],
        [464, 465],
        [465, 466],
        [466, 467],
        [467, 468],
        [468, 469],
        [469, 470],
        [471, 473],
        [473, 474],
        [474, 476],
        [476, 477],
        [477, 479],
        [479, 480],
        [482, 484],
        [484, 486],
        [486, 488],
        [488, 490],
        [490, 492],
        [492, 493],
        [494, 495],
        [495, 501],
        [501, 503],
        [504, 506],
        [507, 509],
        [  0,   0]])
start = inf, end=-1
label = ['DOCTOR', 510, 516]
label[1]=510, label[2]=516, sample_offsets=tensor([[  0,   0],
        [  0,   2],
        [  3,   5],
        [  6,   7],
        [  7,   9],
        [  9,  10],
        [ 11,  15],
        [ 16,  22],
        [ 22,  23],
        [ 24,  26],
        [ 27,  28],
        [ 29,  31],
        [ 32,  33],
        [ 34,  36],
        [ 36,  38],
        [ 38,  39],
        [ 40,  45],
        [ 45,  46],
        [ 46,  47],
        [ 49,  50],
        [ 51,  52],
        [ 53,  67],
        [ 68,  70],
        [ 70,  73],
        [ 73,  76],
        [ 76,  80],
        [ 81,  87],
        [ 87,  88],
        [ 89,  90],
        [ 91,  92],
        [ 93,  94],
        [ 95,  96],
        [ 97, 111],
        [112, 113],
        [113, 115],
        [115, 116],
        [117, 121],
        [122, 128],
        [128, 129],
        [132, 133],
        [133, 134],
        [136, 137],
        [137, 140],
        [140, 143],
        [143, 144],
        [145, 153],
        [154, 155],
        [155, 157],
        [157, 160],
        [160, 164],
        [165, 168],
        [168, 171],
        [171, 172],
        [173, 181],
        [182, 184],
        [185, 187],
        [187, 189],
        [189, 191],
        [191, 192],
        [192, 194],
        [194, 197],
        [198, 200],
        [200, 203],
        [203, 206],
        [206, 210],
        [211, 217],
        [218, 224],
        [225, 226],
        [227, 230],
        [230, 233],
        [234, 236],
        [236, 237],
        [237, 238],
        [239, 241],
        [242, 243],
        [244, 246],
        [247, 248],
        [249, 251],
        [251, 253],
        [253, 254],
        [256, 259],
        [260, 263],
        [264, 272],
        [273, 277],
        [278, 279],
        [280, 284],
        [285, 288],
        [288, 292],
        [293, 303],
        [304, 309],
        [309, 311],
        [311, 312],
        [314, 328],
        [329, 330],
        [331, 337],
        [337, 338],
        [340, 341],
        [341, 342],
        [344, 345],
        [345, 348],
        [348, 351],
        [351, 352],
        [353, 361],
        [362, 363],
        [363, 364],
        [364, 368],
        [368, 370],
        [370, 371],
        [372, 380],
        [381, 383],
        [384, 386],
        [387, 396],
        [396, 398],
        [399, 405],
        [406, 407],
        [407, 413],
        [414, 418],
        [418, 419],
        [420, 423],
        [424, 425],
        [426, 428],
        [429, 430],
        [431, 433],
        [433, 435],
        [435, 436],
        [438, 452],
        [453, 454],
        [455, 461],
        [461, 462],
        [462, 463],
        [463, 464],
        [464, 465],
        [465, 466],
        [466, 468],
        [469, 471],
        [471, 472],
        [472, 474],
        [474, 475],
        [475, 477],
        [477, 478],
        [480, 482],
        [482, 484],
        [484, 486],
        [486, 488],
        [488, 490],
        [490, 491],
        [491, 492],
        [494, 495],
        [495, 501],
        [501, 503],
        [504, 506],
        [507, 509],
        [  0,   0]])
Traceback (most recent call last):
  File "/home/cbc/Nlp/2023_AiCup_PrivacyProtection_MedicalDataStandardization_Competition/NCU_baseline/02_train_model.py", line 217, in <module>
    finetune_model(train_dataloader, val_dataloader, val_dataset)
  File "/home/cbc/Nlp/2023_AiCup_PrivacyProtection_MedicalDataStandardization_Competition/NCU_baseline/train.py", line 177, in finetune_model
    evaluate_total_f1(model, val_dataloader, base_f1_score)#, writer)
TypeError: evaluate_total_f1() missing 1 required positional argument: 'test_dataloader'
